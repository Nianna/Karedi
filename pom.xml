<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>Karedi</groupId>
	<artifactId>Karedi</artifactId>
	<version>1.3.0-rc.2</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.vendor>com.github.nianna</project.vendor>
		<project.mainClass>com.github.nianna.karedi.KarediAppLauncher</project.mainClass>
		<project.jars.outputDirectory>${project.build.directory}/jars</project.jars.outputDirectory>
		<project.dist.outputDirectory>${project.build.directory}/dist</project.dist.outputDirectory>
		<controlsfx.version>11.1.2</controlsfx.version>
		<javafx.version>19.0.2.1</javafx.version>
		<jfugue.version>5.0.8</jfugue.version>
		<jlayer.version>1.0.1</jlayer.version>
		<junit.version>5.9.2</junit.version>
		<mp3agic.version>0.8.1</mp3agic.version>
		<richtextfx.version>0.11.0</richtextfx.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<source>17</source>
					<target>17</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<outputDirectory>${project.jars.outputDirectory}</outputDirectory>
					<archive>
						<manifest>
							<mainClass>${project.mainClass}</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>${project.mainClass}</mainClass>
						</manifest>
					</archive>
					<outputDirectory>${project.dist.outputDirectory}</outputDirectory>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<configLocation>config/checkstyle/checkstyle.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<linkXRef>false</linkXRef>
				</configuration>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.moditect</groupId>
				<artifactId>moditect-maven-plugin</artifactId>
				<version>1.0.0.Final</version>
				<executions>
					<execution>
						<id>add-module-infos</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-module-info</goal>
						</goals>
						<configuration>
							<overwriteExistingFiles>true</overwriteExistingFiles>
							<outputDirectory>${project.jars.outputDirectory}</outputDirectory>
							<modules>
								<module>
									<artifact>
										<groupId>com.googlecode.soundlibs</groupId>
										<artifactId>jlayer</artifactId>
										<version>${jlayer.version}</version>
									</artifact>
									<moduleInfoSource>
										module jlayer {
											requires transitive java.desktop;

											exports javazoom.jl.converter;
											exports javazoom.jl.decoder;
											exports javazoom.jl.player;
											exports javazoom.jl.player.advanced;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>jfugue</groupId>
										<artifactId>jfugue</artifactId>
										<version>${jfugue.version}</version>
									</artifact>
									<moduleInfoSource>
										module jfugue {
											requires java.logging;

											requires transitive java.desktop;
											requires transitive java.xml;

											exports org.jfugue.devices;
											exports org.jfugue.devtools;
											exports org.jfugue.integration;
											exports org.jfugue.midi;
											exports org.jfugue.parser;
											exports org.jfugue.pattern;
											exports org.jfugue.player;
											exports org.jfugue.provider;
											exports org.jfugue.realtime;
											exports org.jfugue.rhythm;
											exports org.jfugue.temporal;
											exports org.jfugue.theory;
											exports org.jfugue.tools;
											exports org.staccato;
											exports org.staccato.functions;
											exports org.staccato.maps;
											exports org.staccato.tools;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.fxmisc.richtext</groupId>
										<artifactId>richtextfx</artifactId>
										<version>${richtextfx.version}</version>
									</artifact>
									<moduleInfoSource>
										module org.fxmisc.richtext {
											requires javafx.graphics;
											requires javafx.controls;
											requires org.fxmisc.flowless;
											requires org.fxmisc.undo;
											requires reactfx;
											requires wellbehavedfx;

											exports org.fxmisc.richtext;
											exports org.fxmisc.richtext.event;
											exports org.fxmisc.richtext.model;
											exports org.fxmisc.richtext.util;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.fxmisc.undo</groupId>
										<artifactId>undofx</artifactId>
										<version>2.1.1</version>
									</artifact>
									<moduleInfoSource>
										module org.fxmisc.undo {
											requires javafx.base;
											requires reactfx;

											exports org.fxmisc.undo;
											exports org.fxmisc.undo.impl;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.mpatric</groupId>
										<artifactId>mp3agic</artifactId>
										<version>${mp3agic.version}</version>
									</artifact>
									<moduleInfoSource>
										module mp3agic {
											exports com.mpatric.mp3agic;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.fxmisc.flowless</groupId>
										<artifactId>flowless</artifactId>
										<version>0.7.0</version>
									</artifact>
									<moduleInfoSource>
										module org.fxmisc.flowless {
											requires javafx.graphics;
											requires javafx.controls;
											requires reactfx;

											exports org.fxmisc.flowless;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.fxmisc.wellbehaved</groupId>
										<artifactId>wellbehavedfx</artifactId>
										<version>0.3.3</version>
									</artifact>
									<moduleInfoSource>
										module wellbehavedfx {
											requires javafx.graphics;
											exports org.fxmisc.wellbehaved.event;
											exports org.fxmisc.wellbehaved.event.internal;
											exports org.fxmisc.wellbehaved.event.template;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.reactfx</groupId>
										<artifactId>reactfx</artifactId>
										<version>2.0-M5</version>
									</artifact>
									<moduleInfoSource>
										module reactfx {
											requires javafx.base;
											requires javafx.graphics;
											requires javafx.controls;

											exports org.reactfx;
											exports org.reactfx.collection;
											exports org.reactfx.inhibeans;
											exports org.reactfx.inhibeans.binding;
											exports org.reactfx.inhibeans.collection;
											exports org.reactfx.inhibeans.property;
											exports org.reactfx.inhibeans.value;
											exports org.reactfx.util;
											exports org.reactfx.value;
										}
									</moduleInfoSource>
								</module>
							</modules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.panteleyev</groupId>
				<artifactId>jpackage-maven-plugin</artifactId>
				<version>1.6.0</version>
				<configuration>
					<name>${project.artifactId}</name>
					<appVersion>1.3.0.1</appVersion>
					<vendor>${project.vendor}</vendor>
					<destination>${project.dist.outputDirectory}</destination>
					<modulePaths>
						<modulePath>${java.home}\jmods</modulePath>
						<modulePath>${settings.localRepository}\org\openjfx\javafx-fxml\${javafx.version}</modulePath>
						<modulePath>${settings.localRepository}\org\openjfx\javafx-controls\${javafx.version}</modulePath>
						<modulePath>${settings.localRepository}\org\openjfx\javafx-base\${javafx.version}</modulePath>
						<modulePath>${settings.localRepository}\org\openjfx\javafx-graphics\${javafx.version}</modulePath>
						<modulePath>${settings.localRepository}\org\controlsfx\controlsfx\${controlsfx.version}</modulePath>
						<modulePath>${project.jars.outputDirectory}</modulePath>
					</modulePaths>
					<module>karedi/${project.mainClass}</module>
					<winShortcut>true</winShortcut>
					<winDirChooser>true</winDirChooser>
					<winMenu>true</winMenu>
					<winPerUserInstall>true</winPerUserInstall>
					<winUpgradeUuid>643965f2-2ce8-4bd5-87de-e3074e25d589</winUpgradeUuid>
<!--					use for Windows *.exe images -->
					<icon>src/main/resources/icon/icon.ico</icon>
<!--					use for Linux *.deb images -->
<!--					<icon>src/main/resources/icon/icon.png</icon>-->
					<linuxShortcut>true</linuxShortcut>
					<linuxAppCategory>Audio;AudioVideo</linuxAppCategory>
					<verbose>true</verbose>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>repo</id>
			<url>file:///${project.basedir}/lib</url>
		</repository>
	</repositories>

	<dependencies>

		<dependency>
			<groupId>com.googlecode.soundlibs</groupId>
			<artifactId>jlayer</artifactId>
			<version>${jlayer.version}</version>
		</dependency>

		<dependency>
			<groupId>jfugue</groupId>
			<artifactId>jfugue</artifactId>
			<version>${jfugue.version}</version>
		</dependency>

		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>${controlsfx.version}</version>
		</dependency>
		<dependency>
			<groupId>com.mpatric</groupId>
			<artifactId>mp3agic</artifactId>
			<version>${mp3agic.version}</version>
		</dependency>
		<dependency>
			<groupId>org.fxmisc.richtext</groupId>
			<artifactId>richtextfx</artifactId>
			<version>${richtextfx.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-base</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-controls</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-graphics</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-fxml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>

		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${javafx.version}</version>
		</dependency>

	</dependencies>

</project>
